{
  "resolvedId": "/Users/yakovvarnaev/dev/fakebank/client/components/user/autocomplete.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script>\nimport { debounce } from \"lodash\";\n\nexport default {\n  setup() {\n    return {\n      users: useUsers(),\n    };\n  },\n  data() {\n    return {\n      query: \"\",\n      selected: null,\n      options: [],\n    };\n  },\n  methods: {\n    async fetch() {\n      const data = await this.users.search(this.query);\n      this.options = data;\n    },\n    setQuery(query) {\n      debounce(() => {\n        this.query = query;\n      }, 300)();\n    },\n  },\n  watch: {\n    selected(oldSelection, newSelection) {\n      this.$emit(\"update\", newSelection);\n    },\n  },\n  mounted() {\n    this.fetch();\n  },\n};\n</script>\n\n<template>\n  <v-autocomplete v-bind=\"$attrs\" no-filter v-model=\"selected\" @update:search=\"setQuery\" :items=\"options\"\n    item-title=\"email\" return-object label=\"User\" />\n</template>\n",
      "start": 1710444277282,
      "end": 1710444277301,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710444277301,
      "end": 1710444277301,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710444277301,
      "end": 1710444277301,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710444277301,
      "end": 1710444277301,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710444277301,
      "end": 1710444277301,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710444277301,
      "end": 1710444277301,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710444277301,
      "end": 1710444277301,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710444277301,
      "end": 1710444277301,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "\nimport { debounce } from \"lodash\";\n\nconst _sfc_main = {\n  setup() {\n    return {\n      users: useUsers(),\n    };\n  },\n  data() {\n    return {\n      query: \"\",\n      selected: null,\n      options: [],\n    };\n  },\n  methods: {\n    async fetch() {\n      const data = await this.users.search(this.query);\n      this.options = data;\n    },\n    setQuery(query) {\n      debounce(() => {\n        this.query = query;\n      }, 300)();\n    },\n  },\n  watch: {\n    selected(oldSelection, newSelection) {\n      this.$emit(\"update\", newSelection);\n    },\n  },\n  mounted() {\n    this.fetch();\n  },\n};\n\nimport { resolveComponent as _resolveComponent, mergeProps as _mergeProps, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_autocomplete = _resolveComponent(\"v-autocomplete\")\n\n  return (_openBlock(), _createBlock(_component_v_autocomplete, _mergeProps(_ctx.$attrs, {\n    \"no-filter\": \"\",\n    modelValue: $data.selected,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => (($data.selected) = $event)),\n    \"onUpdate:search\": $options.setQuery,\n    items: $data.options,\n    \"item-title\": \"email\",\n    \"return-object\": \"\",\n    label: \"User\"\n  }), null, 16, [\"modelValue\", \"onUpdate:search\", \"items\"]))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])",
      "start": 1710444277301,
      "end": 1710444277302,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "result": "\nimport { debounce } from \"lodash\";\n\nconst _sfc_main = {\n  setup() {\n    return {\n      users: useUsers(),\n    };\n  },\n  data() {\n    return {\n      query: \"\",\n      selected: null,\n      options: [],\n    };\n  },\n  methods: {\n    async fetch() {\n      const data = await this.users.search(this.query);\n      this.options = data;\n    },\n    setQuery(query) {\n      debounce(() => {\n        this.query = query;\n      }, 300)();\n    },\n  },\n  watch: {\n    selected(oldSelection, newSelection) {\n      this.$emit(\"update\", newSelection);\n    },\n  },\n  mounted() {\n    this.fetch();\n  },\n};\n\nimport { resolveComponent as _resolveComponent, mergeProps as _mergeProps, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n                                                                       \n\n  return (_openBlock(), _createBlock(_component_v_autocomplete, _mergeProps(_ctx.$attrs, {\n    \"no-filter\": \"\",\n    modelValue: $data.selected,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => (($data.selected) = $event)),\n    \"onUpdate:search\": $options.setQuery,\n    items: $data.options,\n    \"item-title\": \"email\",\n    \"return-object\": \"\",\n    label: \"User\"\n  }), null, 16, [\"modelValue\", \"onUpdate:search\", \"items\"]))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])\n\n/* Vuetify */\nimport { VAutocomplete as _component_v_autocomplete } from \"vuetify/lib/components/VAutocomplete/index.mjs\"\n\n",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useUsers } from '/Users/yakovvarnaev/dev/fakebank/client/stores/users.js';\n\nimport { debounce } from \"lodash\";\n\nconst _sfc_main = {\n  setup() {\n    return {\n      users: useUsers(),\n    };\n  },\n  data() {\n    return {\n      query: \"\",\n      selected: null,\n      options: [],\n    };\n  },\n  methods: {\n    async fetch() {\n      const data = await this.users.search(this.query);\n      this.options = data;\n    },\n    setQuery(query) {\n      debounce(() => {\n        this.query = query;\n      }, 300)();\n    },\n  },\n  watch: {\n    selected(oldSelection, newSelection) {\n      this.$emit(\"update\", newSelection);\n    },\n  },\n  mounted() {\n    this.fetch();\n  },\n};\n\nimport { resolveComponent as _resolveComponent, mergeProps as _mergeProps, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n                                                                       \n\n  return (_openBlock(), _createBlock(_component_v_autocomplete, _mergeProps(_ctx.$attrs, {\n    \"no-filter\": \"\",\n    modelValue: $data.selected,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => (($data.selected) = $event)),\n    \"onUpdate:search\": $options.setQuery,\n    items: $data.options,\n    \"item-title\": \"email\",\n    \"return-object\": \"\",\n    label: \"User\"\n  }), null, 16, [\"modelValue\", \"onUpdate:search\", \"items\"]))\n}\n\n\nimport _export_sfc from '\u0000plugin-vue:export-helper'\nexport default /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]])\n\n/* Vuetify */\nimport { VAutocomplete as _component_v_autocomplete } from \"vuetify/lib/components/VAutocomplete/index.mjs\"\n\n",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvpzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3G;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710444277302,
      "end": 1710444277302,
      "order": "normal"
    }
  ]
}
