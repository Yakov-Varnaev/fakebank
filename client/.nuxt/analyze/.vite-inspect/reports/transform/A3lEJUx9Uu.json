{
  "resolvedId": "/Users/yakovvarnaev/dev/fakebank/client/node_modules/vuetify/lib/composables/locale.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Utilities\nimport { computed, inject, provide, ref } from 'vue';\nimport { createVuetifyAdapter } from \"../locale/adapters/vuetify.mjs\"; // Types\nexport const LocaleSymbol = Symbol.for('vuetify:locale');\nfunction isLocaleInstance(obj) {\n  return obj.name != null;\n}\nexport function createLocale(options) {\n  const i18n = options?.adapter && isLocaleInstance(options?.adapter) ? options?.adapter : createVuetifyAdapter(options);\n  const rtl = createRtl(i18n, options);\n  return {\n    ...i18n,\n    ...rtl\n  };\n}\nexport function useLocale() {\n  const locale = inject(LocaleSymbol);\n  if (!locale) throw new Error('[Vuetify] Could not find injected locale instance');\n  return locale;\n}\nexport function provideLocale(props) {\n  const locale = inject(LocaleSymbol);\n  if (!locale) throw new Error('[Vuetify] Could not find injected locale instance');\n  const i18n = locale.provide(props);\n  const rtl = provideRtl(i18n, locale.rtl, props);\n  const data = {\n    ...i18n,\n    ...rtl\n  };\n  provide(LocaleSymbol, data);\n  return data;\n}\n\n// RTL\n\nexport const RtlSymbol = Symbol.for('vuetify:rtl');\nfunction genDefaults() {\n  return {\n    af: false,\n    ar: true,\n    bg: false,\n    ca: false,\n    ckb: false,\n    cs: false,\n    de: false,\n    el: false,\n    en: false,\n    es: false,\n    et: false,\n    fa: true,\n    fi: false,\n    fr: false,\n    hr: false,\n    hu: false,\n    he: true,\n    id: false,\n    it: false,\n    ja: false,\n    km: false,\n    ko: false,\n    lv: false,\n    lt: false,\n    nl: false,\n    no: false,\n    pl: false,\n    pt: false,\n    ro: false,\n    ru: false,\n    sk: false,\n    sl: false,\n    srCyrl: false,\n    srLatn: false,\n    sv: false,\n    th: false,\n    tr: false,\n    az: false,\n    uk: false,\n    vi: false,\n    zhHans: false,\n    zhHant: false\n  };\n}\nexport function createRtl(i18n, options) {\n  const rtl = ref(options?.rtl ?? genDefaults());\n  const isRtl = computed(() => rtl.value[i18n.current.value] ?? false);\n  return {\n    isRtl,\n    rtl,\n    rtlClasses: computed(() => `v-locale--is-${isRtl.value ? 'rtl' : 'ltr'}`)\n  };\n}\nexport function provideRtl(locale, rtl, props) {\n  const isRtl = computed(() => props.rtl ?? rtl.value[locale.current.value] ?? false);\n  return {\n    isRtl,\n    rtl,\n    rtlClasses: computed(() => `v-locale--is-${isRtl.value ? 'rtl' : 'ltr'}`)\n  };\n}\nexport function useRtl() {\n  const locale = inject(LocaleSymbol);\n  if (!locale) throw new Error('[Vuetify] Could not find injected rtl instance');\n  return {\n    isRtl: locale.isRtl,\n    rtlClasses: locale.rtlClasses\n  };\n}\n//# sourceMappingURL=locale.mjs.map",
      "start": 1710444276454,
      "end": 1710444276470,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710444276470,
      "end": 1710444276470,
      "order": "normal"
    }
  ]
}
