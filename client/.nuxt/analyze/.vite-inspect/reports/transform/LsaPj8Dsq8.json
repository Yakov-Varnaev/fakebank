{
  "resolvedId": "/Users/yakovvarnaev/dev/fakebank/client/node_modules/decamelize/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const handlePreserveConsecutiveUppercase = (decamelized, separator) => {\n\t// Lowercase all single uppercase characters. As we\n\t// want to preserve uppercase sequences, we cannot\n\t// simply lowercase the separated string at the end.\n\t// `data_For_USACounties` → `data_for_USACounties`\n\tdecamelized = decamelized.replace(\n\t\t/((?<![\\p{Uppercase_Letter}\\d])[\\p{Uppercase_Letter}\\d](?![\\p{Uppercase_Letter}\\d]))/gu,\n\t\t$0 => $0.toLowerCase(),\n\t);\n\n\t// Remaining uppercase sequences will be separated from lowercase sequences.\n\t// `data_For_USACounties` → `data_for_USA_counties`\n\treturn decamelized.replace(\n\t\t/(\\p{Uppercase_Letter}+)(\\p{Uppercase_Letter}\\p{Lowercase_Letter}+)/gu,\n\t\t(_, $1, $2) => $1 + separator + $2.toLowerCase(),\n\t);\n};\n\nexport default function decamelize(\n\ttext,\n\t{\n\t\tseparator = '_',\n\t\tpreserveConsecutiveUppercase = false,\n\t} = {},\n) {\n\tif (!(typeof text === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError(\n\t\t\t'The `text` and `separator` arguments should be of type `string`',\n\t\t);\n\t}\n\n\t// Checking the second character is done later on. Therefore process shorter strings here.\n\tif (text.length < 2) {\n\t\treturn preserveConsecutiveUppercase ? text : text.toLowerCase();\n\t}\n\n\tconst replacement = `$1${separator}$2`;\n\n\t// Split lowercase sequences followed by uppercase character.\n\t// `dataForUSACounties` → `data_For_USACounties`\n\t// `myURLstring → `my_URLstring`\n\tconst decamelized = text.replace(\n\t\t/([\\p{Lowercase_Letter}\\d])(\\p{Uppercase_Letter})/gu,\n\t\treplacement,\n\t);\n\n\tif (preserveConsecutiveUppercase) {\n\t\treturn handlePreserveConsecutiveUppercase(decamelized, separator);\n\t}\n\n\t// Split multiple uppercase characters followed by one or more lowercase characters.\n\t// `my_URLstring` → `my_ur_lstring`\n\treturn decamelized\n\t\t.replace(\n\t\t\t/(\\p{Uppercase_Letter})(\\p{Uppercase_Letter}\\p{Lowercase_Letter}+)/gu,\n\t\t\treplacement,\n\t\t)\n\t\t.toLowerCase();\n}\n",
      "start": 1710444277303,
      "end": 1710444277322,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710444277322,
      "end": 1710444277322,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710444277322,
      "end": 1710444277323,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710444277323,
      "end": 1710444277323,
      "order": "normal"
    }
  ]
}
