{
  "resolvedId": "/Users/yakovvarnaev/dev/fakebank/client/stores/users.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { fetchUsers } from \"~/api/users\";\n\nexport const useUsers = defineStore(\"users\", {\n  state: () => ({\n    total: 0,\n    page: 1,\n    perPage: 10,\n  }),\n  actions: {\n    async fetchUsers(query = null) {\n      const offset = (this.page - 1) * this.perPage;\n      try {\n        const { data } = await fetchUsers(offset, this.perPage, query);\n        return data;\n      } catch (error) {\n        useAlert().reportError(\n          `Failed to get users: ${error.response?.status}`,\n        );\n        return { data: [], total: 0 };\n      }\n    },\n    async search(query) {\n      const { data } = await useLoader().withLoader(\n        async () => await this.fetchUsers(query),\n      );\n      return data;\n    },\n  },\n});\n",
      "start": 1710444277351,
      "end": 1710444277390,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vuetify:import",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710444277390,
      "end": 1710444277390,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { defineStore } from '/Users/yakovvarnaev/dev/fakebank/client/node_modules/@pinia/nuxt/dist/runtime/composables';\nimport { useAlert } from '/Users/yakovvarnaev/dev/fakebank/client/stores/alerts.js';\nimport { useLoader } from '/Users/yakovvarnaev/dev/fakebank/client/stores/loader.js';\nimport { fetchUsers } from \"~/api/users\";\n\nexport const useUsers = defineStore(\"users\", {\n  state: () => ({\n    total: 0,\n    page: 1,\n    perPage: 10,\n  }),\n  actions: {\n    async fetchUsers(query = null) {\n      const offset = (this.page - 1) * this.perPage;\n      try {\n        const { data } = await fetchUsers(offset, this.perPage, query);\n        return data;\n      } catch (error) {\n        useAlert().reportError(\n          `Failed to get users: ${error.response?.status}`,\n        );\n        return { data: [], total: 0 };\n      }\n    },\n    async search(query) {\n      const { data } = await useLoader().withLoader(\n        async () => await this.fetchUsers(query),\n      );\n      return data;\n    },\n  },\n});\n",
      "start": 1710444277390,
      "end": 1710444277391,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1710444277391,
      "end": 1710444277391,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710444277391,
      "end": 1710444277391,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1710444277391,
      "end": 1710444277391,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1710444277391,
      "end": 1710444277391,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1710444277391,
      "end": 1710444277391,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710444277391,
      "end": 1710444277391,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710444277391,
      "end": 1710444277391,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710444277391,
      "end": 1710444277391,
      "order": "normal"
    }
  ]
}
