basePath: /api/v1
definitions:
  accounts.Account:
    properties:
      balance:
        type: number
      id:
        type: string
      name:
        type: string
      user_id:
        type: string
    type: object
  accounts.AccountCreate:
    properties:
      name:
        type: string
    type: object
  pagination.Page-accounts_Account:
    properties:
      data:
        items:
          $ref: '#/definitions/accounts.Account'
        type: array
      total:
        type: integer
    type: object
  pagination.Page-users_User:
    properties:
      data:
        items:
          $ref: '#/definitions/users.User'
        type: array
      total:
        type: integer
    type: object
  users.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      is_superuser:
        type: boolean
      is_verified:
        type: boolean
      last_name:
        type: string
    type: object
  users.UserLoginData:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  users.UserRegisterData:
    properties:
      _:
        type: boolean
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: FakeBank API
  version: "1.0"
paths:
  /accounts:
    get:
      consumes:
      - application/json
      parameters:
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: User ID
        in: query
        name: user_id
        type: string
      - description: Search query
        in: query
        name: query
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pagination.Page-accounts_Account'
      summary: List accounts
      tags:
      - accounts
    post:
      consumes:
      - application/json
      parameters:
      - description: Account Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/accounts.AccountCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accounts.Account'
      summary: Create new account
      tags:
      - accounts
  /accounts/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      - description: Account Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/accounts.AccountCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/accounts.Account'
        "400":
          description: Bad Request
        "403":
          description: Forbidden
      summary: Update account
      tags:
      - accounts
  /auth/signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: User Credentials
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/users.UserLoginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Sign In
      tags:
      - users
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: List user
      parameters:
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Search query
        in: query
        name: query
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pagination.Page-users_User'
      summary: List user
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User Register Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/users.UserRegisterData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
      summary: Create new user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
      summary: Retrieve user
      tags:
      - users
  /users/me:
    get:
      consumes:
      - application/json
      description: Authenticated endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
      security:
      - Bearer: []
      summary: Authenticated endpoint
      tags:
      - users
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
